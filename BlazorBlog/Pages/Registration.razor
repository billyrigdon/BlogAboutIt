@page "/register"
@using BlazorBlog.Models;;
@inject HttpClient Http;
@inject IConfiguration Configuration;

<h3>Register</h3>

<EditForm Model="@registrationModel" OnValidSubmit="@HandleRegister">
  <DataAnnotationsValidator />
  <ValidationSummary />

  <div class="form-group">
    <label for="name">Username</label>
    <InputText id="name" class="form-control" @bind-Value="@registrationModel.Name" />
  </div>

  <div class="form-group">
    <label for="email">Email</label>
    <InputText id="email" class="form-control" @bind-Value="@registrationModel.Email" />
    <ValidationMessage For="@(() => registrationModel.Email)" />
  </div>

  <div class="form-group">
    <label for="password">Password</label>
    <InputText id="password" class="form-control" @bind-Value="@registrationModel.Password" type="password" />
    <ValidationMessage For="@(() => registrationModel.Password)" />
  </div>

  <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
  private RegistrationModel registrationModel = new RegistrationModel();

  private async Task HandleRegister()
  {
    try
    {
      var apiUrl = Configuration["Api:BaseUrl"];
      var response = await Http.PostAsJsonAsync($"{apiUrl}/register", registrationModel);

      if (response.IsSuccessStatusCode)
      {
        Console.WriteLine("User registered successfully!");
      }
      else
      {
        var error = await response.Content.ReadAsStringAsync();
        Console.WriteLine($"Registration failed: {error}");
      }
    }
    catch (Exception ex)
    {
      Console.WriteLine($"Registration failed: {ex.Message}");
    }
  }
}
